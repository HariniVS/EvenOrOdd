buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE"
        classpath 'org.springframework:springloaded:1.2.6.RELEASE'
    }
}

plugins {
    id 'org.springframework.boot' version '1.5.3.RELEASE'
}


group = 'springio'
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'docker'

sourceCompatibility = 1.7
targetCompatibility = 1.7
group = 'harinivs'
mainClassName = 'com.tw.harini.EvenOrOdd'

task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = war.baseName.toLowerCase()
    dockerfile = file('dockerFile')
    doFirst {
        copy {
            from war.archivePath
            into stageDir
        }
    }
}
version = System.getenv('TRAVIS_BUILD_NUMBER')

war {
    baseName = 'myapp'
    version = version
    println("Travis build version"+version)
}

jar {
    manifest {
        attributes(
                "Main-Class": "com.tw.harini.EvenOrOdd"
        )
    }
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.thymeleaf:thymeleaf-spring4")
    compile("nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect")
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}
distDocker{
    exposePort 8080
}

